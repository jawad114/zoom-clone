{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StartMeeting from \"../components/StartMeeting\";\nimport { Socket, io } from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MeetingRoom() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    roomId = _useState4[0],\n    setRoomId = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeUser = _useState6[0],\n    setActiveUser = _useState6[1];\n  var socketRef = useRef(null);\n  var openMeeting = function openMeeting() {\n    if (socketRef.current) {\n      socketRef.current.emit('join-room', {\n        roomId: roomId,\n        userName: name\n      });\n    }\n  };\n  useEffect(function () {\n    var API_URL = \"https://260c-121-52-147-62.ngrok-free.app/\";\n    socketRef.current = io(API_URL);\n    console.warn(\"Hello Jawad \");\n    socketRef.current.on('connect', function () {\n      console.log(\"Connected\");\n    });\n    socketRef.current.on('all-users', function (users) {\n      console.log(\"Active Users\");\n      setActiveUser(users);\n    });\n    return function () {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(StartMeeting, {\n      name: name,\n      setName: setName,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      openMeeting: openMeeting\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#1c1c1c\",\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useRef","View","StyleSheet","StartMeeting","Socket","io","jsx","_jsx","MeetingRoom","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","roomId","setRoomId","_useState5","_useState6","activeUser","setActiveUser","socketRef","openMeeting","current","emit","userName","API_URL","console","warn","on","log","users","disconnect","style","styles","container","children","create","backgroundColor","flex"],"sources":["C:/Users/Dubai Computers/Desktop/zoom-app/zoom/screens/MeetingRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport StartMeeting from '../components/StartMeeting';\r\nimport { Socket, io } from 'socket.io-client';\r\n\r\nexport default function MeetingRoom() {\r\n    const [name, setName] = useState();\r\n    const [roomId, setRoomId] = useState();\r\n    const [activeUser, setActiveUser]=useState();\r\n    const socketRef = useRef(null);\r\n\r\n    const openMeeting = () => {\r\n        if (socketRef.current) {\r\n            socketRef.current.emit('join-room', { roomId: roomId, userName: name });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const API_URL = \"https://260c-121-52-147-62.ngrok-free.app/\";\r\n        socketRef.current = io(API_URL);\r\n\r\n        console.warn(\"Hello Jawad \");\r\n\r\n        socketRef.current.on('connect', () => {\r\n            console.log(\"Connected\");\r\n        });\r\n        socketRef.current.on('all-users', users=>{\r\n            console.log(\"Active Users\");\r\n            setActiveUser(users);\r\n        })\r\n        return () => {\r\n            // Clean up the socket on component unmount\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n       \r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StartMeeting\r\n                name={name}\r\n                setName={setName}\r\n                roomId={roomId}\r\n                setRoomId={setRoomId}\r\n                openMeeting={openMeeting}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#1c1c1c\",\r\n        flex: 1\r\n    },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE3D,OAAOC,YAAY;AACnB,SAASC,MAAM,EAAEC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE9C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC,IAAAC,SAAA,GAAwBV,QAAQ,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAA4Bf,QAAQ,CAAC,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAAkCnB,QAAQ,CAAC,CAAC;IAAAoB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,SAAS,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE9B,IAAMuB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAID,SAAS,CAACE,OAAO,EAAE;MACnBF,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE;QAAET,MAAM,EAAEA,MAAM;QAAEU,QAAQ,EAAEd;MAAK,CAAC,CAAC;IAC3E;EACJ,CAAC;EAEDd,SAAS,CAAC,YAAM;IACZ,IAAM6B,OAAO,GAAG,4CAA4C;IAC5DL,SAAS,CAACE,OAAO,GAAGnB,EAAE,CAACsB,OAAO,CAAC;IAE/BC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;IAE5BP,SAAS,CAACE,OAAO,CAACM,EAAE,CAAC,SAAS,EAAE,YAAM;MAClCF,OAAO,CAACG,GAAG,CAAC,WAAW,CAAC;IAC5B,CAAC,CAAC;IACFT,SAAS,CAACE,OAAO,CAACM,EAAE,CAAC,WAAW,EAAE,UAAAE,KAAK,EAAE;MACrCJ,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC;MAC3BV,aAAa,CAACW,KAAK,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,YAAM;MAET,IAAIV,SAAS,CAACE,OAAO,EAAE;QACnBF,SAAS,CAACE,OAAO,CAACS,UAAU,CAAC,CAAC;MAClC;IACJ,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAEN,OACI1B,IAAA,CAACN,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1B9B,IAAA,CAACJ,YAAY;MACTS,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBG,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBM,WAAW,EAAEA;IAAY,CAC5B;EAAC,CACA,CAAC;AAEf;AAEA,IAAMY,MAAM,GAAGjC,UAAU,CAACoC,MAAM,CAAC;EAC7BF,SAAS,EAAE;IACPG,eAAe,EAAE,SAAS;IAC1BC,IAAI,EAAE;EACV;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}